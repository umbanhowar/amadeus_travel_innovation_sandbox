/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Airport', 'model/FlightSearchBookingInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Airport'), require('./FlightSearchBookingInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.AmadeusTravelInnovationSandbox) {
      root.AmadeusTravelInnovationSandbox = {};
    }
    root.AmadeusTravelInnovationSandbox.FlightSearchSegment = factory(root.AmadeusTravelInnovationSandbox.ApiClient, root.AmadeusTravelInnovationSandbox.Airport, root.AmadeusTravelInnovationSandbox.FlightSearchBookingInfo);
  }
}(this, function(ApiClient, Airport, FlightSearchBookingInfo) {
  'use strict';




  /**
   * The FlightSearchSegment model module.
   * @module model/FlightSearchSegment
   * @version 1.2
   */

  /**
   * Constructs a new <code>FlightSearchSegment</code>.
   * @alias module:model/FlightSearchSegment
   * @class
   * @param departsAt {String} Date and time of departure at the origin, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a>  date format yyyy-MM-ddTHH:mm in the local time at the origin airport
   * @param arrivesAt {String} Date and time of departure at the destination, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a>  date format yyyy-MM-ddTHH:mm in the local time at the destination airport
   * @param origin {module:model/Airport} Information on the origin airport, from which this flight departs
   * @param destination {module:model/Airport} Information on the destination airport, at which this flight arrives
   * @param marketingAirline {String} The 2 character alphanumeric <a href=\"https://en.wikipedia.org/wiki/Airline_codes\">IATA airline code</a> of the airline that is responsible for the traveller this flight
   * @param operatingAirline {String} The 2 character alphanumeric <a href=\"https://en.wikipedia.org/wiki/Airline_codes\">IATA airline code</a> of the airline that is providing the aircraft for this flight. Note that in the USA, if the marketing and operating carrier are different, you are legally required to display this in your application.
   * @param flightNumber {String} The identifier that the airline uses for this flight route. This is most commonly - but not always - a number. When combined with the airline and date, it identifies an individual aircraft's flight
   * @param bookingInfo {module:model/FlightSearchBookingInfo} A booking information object with additional details about how the quality of this flight at the given price.
   */
  var exports = function(departsAt, arrivesAt, origin, destination, marketingAirline, operatingAirline, flightNumber, bookingInfo) {
    var _this = this;

    _this['departs_at'] = departsAt;
    _this['arrives_at'] = arrivesAt;
    _this['origin'] = origin;
    _this['destination'] = destination;
    _this['marketing_airline'] = marketingAirline;
    _this['operating_airline'] = operatingAirline;
    _this['flight_number'] = flightNumber;

    _this['booking_info'] = bookingInfo;
  };

  /**
   * Constructs a <code>FlightSearchSegment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FlightSearchSegment} obj Optional instance to populate.
   * @return {module:model/FlightSearchSegment} The populated <code>FlightSearchSegment</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('departs_at')) {
        obj['departs_at'] = ApiClient.convertToType(data['departs_at'], 'String');
      }
      if (data.hasOwnProperty('arrives_at')) {
        obj['arrives_at'] = ApiClient.convertToType(data['arrives_at'], 'String');
      }
      if (data.hasOwnProperty('origin')) {
        obj['origin'] = Airport.constructFromObject(data['origin']);
      }
      if (data.hasOwnProperty('destination')) {
        obj['destination'] = Airport.constructFromObject(data['destination']);
      }
      if (data.hasOwnProperty('marketing_airline')) {
        obj['marketing_airline'] = ApiClient.convertToType(data['marketing_airline'], 'String');
      }
      if (data.hasOwnProperty('operating_airline')) {
        obj['operating_airline'] = ApiClient.convertToType(data['operating_airline'], 'String');
      }
      if (data.hasOwnProperty('flight_number')) {
        obj['flight_number'] = ApiClient.convertToType(data['flight_number'], 'String');
      }
      if (data.hasOwnProperty('aircraft')) {
        obj['aircraft'] = ApiClient.convertToType(data['aircraft'], 'String');
      }
      if (data.hasOwnProperty('booking_info')) {
        obj['booking_info'] = FlightSearchBookingInfo.constructFromObject(data['booking_info']);
      }
    }
    return obj;
  }

  /**
   * Date and time of departure at the origin, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a>  date format yyyy-MM-ddTHH:mm in the local time at the origin airport
   * @member {String} departs_at
   */
  exports.prototype['departs_at'] = undefined;
  /**
   * Date and time of departure at the destination, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a>  date format yyyy-MM-ddTHH:mm in the local time at the destination airport
   * @member {String} arrives_at
   */
  exports.prototype['arrives_at'] = undefined;
  /**
   * Information on the origin airport, from which this flight departs
   * @member {module:model/Airport} origin
   */
  exports.prototype['origin'] = undefined;
  /**
   * Information on the destination airport, at which this flight arrives
   * @member {module:model/Airport} destination
   */
  exports.prototype['destination'] = undefined;
  /**
   * The 2 character alphanumeric <a href=\"https://en.wikipedia.org/wiki/Airline_codes\">IATA airline code</a> of the airline that is responsible for the traveller this flight
   * @member {String} marketing_airline
   */
  exports.prototype['marketing_airline'] = undefined;
  /**
   * The 2 character alphanumeric <a href=\"https://en.wikipedia.org/wiki/Airline_codes\">IATA airline code</a> of the airline that is providing the aircraft for this flight. Note that in the USA, if the marketing and operating carrier are different, you are legally required to display this in your application.
   * @member {String} operating_airline
   */
  exports.prototype['operating_airline'] = undefined;
  /**
   * The identifier that the airline uses for this flight route. This is most commonly - but not always - a number. When combined with the airline and date, it identifies an individual aircraft's flight
   * @member {String} flight_number
   */
  exports.prototype['flight_number'] = undefined;
  /**
   * The <a href=\"http://www.jacanaent.com/JacTechLib/07Aviation/AircraftTypeCodes.txt\">IATA aircraft type designator</a> of aircraft that will be used for this flight
   * @member {String} aircraft
   */
  exports.prototype['aircraft'] = undefined;
  /**
   * A booking information object with additional details about how the quality of this flight at the given price.
   * @member {module:model/FlightSearchBookingInfo} booking_info
   */
  exports.prototype['booking_info'] = undefined;



  return exports;
}));


