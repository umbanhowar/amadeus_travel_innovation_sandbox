/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.AmadeusTravelInnovationSandbox) {
      root.AmadeusTravelInnovationSandbox = {};
    }
    root.AmadeusTravelInnovationSandbox.FlightSearchBookingInfo = factory(root.AmadeusTravelInnovationSandbox.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The FlightSearchBookingInfo model module.
   * @module model/FlightSearchBookingInfo
   * @version 1.2
   */

  /**
   * Constructs a new <code>FlightSearchBookingInfo</code>.
   * @alias module:model/FlightSearchBookingInfo
   * @class
   * @param travelClass {String} The cabin class offered on this flight. An enumeration that will read either ECONOMY, PREMIUM_ECONOMY, BUSINESS or FIRST
   * @param bookingCode {String} The Reservation Booking Designator code that determines the quality and terms of the flight offered for the given price. A single letter from A..Z
   * @param seatsRemaining {String} The minimum number of seats that are still available for this price at the time of search. If the value is a 4 or above, there are often more than this number of seats still available.
   */
  var exports = function(travelClass, bookingCode, seatsRemaining) {
    var _this = this;

    _this['travel_class'] = travelClass;

    _this['booking_code'] = bookingCode;
    _this['seats_remaining'] = seatsRemaining;


  };

  /**
   * Constructs a <code>FlightSearchBookingInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FlightSearchBookingInfo} obj Optional instance to populate.
   * @return {module:model/FlightSearchBookingInfo} The populated <code>FlightSearchBookingInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('travel_class')) {
        obj['travel_class'] = ApiClient.convertToType(data['travel_class'], 'String');
      }
      if (data.hasOwnProperty('cabin_code')) {
        obj['cabin_code'] = ApiClient.convertToType(data['cabin_code'], 'String');
      }
      if (data.hasOwnProperty('booking_code')) {
        obj['booking_code'] = ApiClient.convertToType(data['booking_code'], 'String');
      }
      if (data.hasOwnProperty('seats_remaining')) {
        obj['seats_remaining'] = ApiClient.convertToType(data['seats_remaining'], 'String');
      }
      if (data.hasOwnProperty('fare_family')) {
        obj['fare_family'] = ApiClient.convertToType(data['fare_family'], 'String');
      }
      if (data.hasOwnProperty('fare_basis')) {
        obj['fare_basis'] = ApiClient.convertToType(data['fare_basis'], 'String');
      }
    }
    return obj;
  }

  /**
   * The cabin class offered on this flight. An enumeration that will read either ECONOMY, PREMIUM_ECONOMY, BUSINESS or FIRST
   * @member {String} travel_class
   */
  exports.prototype['travel_class'] = undefined;
  /**
   * A single character encoding of the travel_class, generally only available on responses from affiliates.
   * @member {String} cabin_code
   */
  exports.prototype['cabin_code'] = undefined;
  /**
   * The Reservation Booking Designator code that determines the quality and terms of the flight offered for the given price. A single letter from A..Z
   * @member {String} booking_code
   */
  exports.prototype['booking_code'] = undefined;
  /**
   * The minimum number of seats that are still available for this price at the time of search. If the value is a 4 or above, there are often more than this number of seats still available.
   * @member {String} seats_remaining
   */
  exports.prototype['seats_remaining'] = undefined;
  /**
   * Enumeration of the type of fare which this airline is providing, eg. VALUE. This is generally only available for affiliate responses.
   * @member {String} fare_family
   */
  exports.prototype['fare_family'] = undefined;
  /**
   * See https://en.wikipedia.org/wiki/Fare_basis_code for the fare being offered.
   * @member {String} fare_basis
   */
  exports.prototype['fare_basis'] = undefined;



  return exports;
}));


