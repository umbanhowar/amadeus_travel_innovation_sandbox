/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Amount', 'model/RestrictedRate'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Amount'), require('./RestrictedRate'));
  } else {
    // Browser globals (root is window)
    if (!root.AmadeusTravelInnovationSandbox) {
      root.AmadeusTravelInnovationSandbox = {};
    }
    root.AmadeusTravelInnovationSandbox.TrainSearchPricing = factory(root.AmadeusTravelInnovationSandbox.ApiClient, root.AmadeusTravelInnovationSandbox.Amount, root.AmadeusTravelInnovationSandbox.RestrictedRate);
  }
}(this, function(ApiClient, Amount, RestrictedRate) {
  'use strict';




  /**
   * The TrainSearchPricing model module.
   * @module model/TrainSearchPricing
   * @version 1.2
   */

  /**
   * Constructs a new <code>TrainSearchPricing</code>.
   * @alias module:model/TrainSearchPricing
   * @class
   * @param serviceClass {String} A standard enumeration of the type of seat, bed or service the passenger can expect.
   * @param bookingCode {String} A code the identifies the type of booking class being used.
   * @param accomodation {String} A standard enumeration of the mode in which the passenger is accommodated. For example&colon; SEAT, BERTH, CABIN, CARGO, UNKNOWN.
   * @param totalPrice {module:model/Amount} The total cost of this service.
   * @param rate {module:model/RestrictedRate} A rate identifying type of charge being levied for this service, and the restrictions that apply.
   */
  var exports = function(serviceClass, bookingCode, accomodation, totalPrice, rate) {
    var _this = this;

    _this['service_class'] = serviceClass;
    _this['booking_code'] = bookingCode;
    _this['accomodation'] = accomodation;
    _this['total_price'] = totalPrice;
    _this['rate'] = rate;
  };

  /**
   * Constructs a <code>TrainSearchPricing</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrainSearchPricing} obj Optional instance to populate.
   * @return {module:model/TrainSearchPricing} The populated <code>TrainSearchPricing</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('service_class')) {
        obj['service_class'] = ApiClient.convertToType(data['service_class'], 'String');
      }
      if (data.hasOwnProperty('booking_code')) {
        obj['booking_code'] = ApiClient.convertToType(data['booking_code'], 'String');
      }
      if (data.hasOwnProperty('accomodation')) {
        obj['accomodation'] = ApiClient.convertToType(data['accomodation'], 'String');
      }
      if (data.hasOwnProperty('total_price')) {
        obj['total_price'] = Amount.constructFromObject(data['total_price']);
      }
      if (data.hasOwnProperty('rate')) {
        obj['rate'] = RestrictedRate.constructFromObject(data['rate']);
      }
    }
    return obj;
  }

  /**
   * A standard enumeration of the type of seat, bed or service the passenger can expect.
   * @member {String} service_class
   */
  exports.prototype['service_class'] = undefined;
  /**
   * A code the identifies the type of booking class being used.
   * @member {String} booking_code
   */
  exports.prototype['booking_code'] = undefined;
  /**
   * A standard enumeration of the mode in which the passenger is accommodated. For example&colon; SEAT, BERTH, CABIN, CARGO, UNKNOWN.
   * @member {String} accomodation
   */
  exports.prototype['accomodation'] = undefined;
  /**
   * The total cost of this service.
   * @member {module:model/Amount} total_price
   */
  exports.prototype['total_price'] = undefined;
  /**
   * A rate identifying type of charge being levied for this service, and the restrictions that apply.
   * @member {module:model/RestrictedRate} rate
   */
  exports.prototype['rate'] = undefined;



  return exports;
}));


